<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lovemylunch.api.dao.mybatis.mapper.CompanyMapper">
	<select id="get" parameterType="string" resultType="com.lovemylunch.common.beans.client.Company">
		<include refid="search_selectFields"/>
		<include refid="search_fromClause"/>
		WHERE a.companyId = #{id}
	</select>

	<select id="search" parameterType="map" resultType="com.lovemylunch.common.beans.client.Company">
		<include refid="search_selectFields"/>
		<include refid="search_fromClause"/>
		<include refid="search_whereClause"/>
		<include refid="search_sortingClause"/>
		<include refid="search_pageClause"/>
	</select>

	<select id="count" parameterType="map" resultType="int">
		SELECT COUNT(1)
		<include refid="search_fromClause"/>
		<include refid="search_whereClause"/>
	</select>

	<sql id="search_selectFields">
	SELECT
   a.companyId as companyId,
   a.companyCode as companyCode,
   a.companyName as companyName,
   a.operationCenterCode as operationCenterCode,
   a.companyLogoPath as companyLogoPath,
   a.status as status,
   a.joinTime as joinTime
	</sql>

	<sql id="search_fromClause">
		FROM awf_company a
	</sql>

	<sql id="search_whereClause">
		<where>
			<if test="conditions != null">
				<foreach item="condition" collection="conditions" index="index" separator="and">
					<choose>
						<when
								test="condition.conditionExpression != null and (condition.conditionExpression == 'eq'.toString() or condition.conditionExpression == '='.toString())">
							${condition.conditionName} = #{condition.conditionValue}
						</when>
						<when
								test="condition.conditionExpression != null and condition.conditionExpression == 'like'.toString() ">
							(${condition.conditionName} is not null AND UPPER(${condition.conditionName}) LIKE UPPER('%${condition.conditionValue}%'))
						</when>
						<otherwise>
							${condition.conditionName} = #{condition.conditionValue}
						</otherwise>
					</choose>
				</foreach>
			</if>
		</where>
	</sql>

	<sql id="search_sortingClause">
		<if test="sortColumn == null or sortColumn == ''">
			ORDER BY a.companyId
		</if>
		<if test="sortColumn != null and sortColumn != ''">
			ORDER BY a.${sortColumn}
		</if>
		<if test="sortType != null and sortType == 'asc'">
			ASC
		</if>
		<if test="sortType != null and sortType == 'desc'">
			DESC
		</if>
	</sql>

	<sql id="search_pageClause">
		limit #{startRowNumber},#{pageSize}
	</sql>

	<insert id="insert" parameterType="com.lovemylunch.common.beans.client.Company">
		INSERT INTO awf_company (
		companyId,
		companyCode,
		companyName,
		operationCenterCode,
		companyLogoPath,
		status,
		joinTime
		) VALUES (
		#{companyId,jdbcType=VARCHAR},
		#{companyCode,jdbcType=VARCHAR},
		#{companyName,jdbcType=VARCHAR},
		#{operationCenterCode,jdbcType=VARCHAR},
		#{companyLogoPath,jdbcType=VARCHAR},
		#{status,jdbcType=NUMERIC},
		#{joinTime,jdbcType=TIMESTAMP}
		)
	</insert>

	<delete id="delete" parameterType="string">
		DELETE FROM awf_company WHERE customerId = #{id}
	</delete>

	<update id="update" parameterType="com.lovemylunch.common.beans.client.Company">
		UPDATE awf_company
		SET
		companyName = #{companyName,jdbcType=VARCHAR},
		companyCode = #{companyCode,jdbcType=VARCHAR},
		operationCenterCode = #{operationCenterCode,jdbcType=VARCHAR},
		companyLogoPath = #{companyLogoPath,jdbcType=VARCHAR},
		status = #{status,jdbcType=NUMERIC},
		joinTime = #{joinTime,jdbcType=TIMESTAMP}
		WHERE companyId = #{companyId}
	</update>
</mapper>